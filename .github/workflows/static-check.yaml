# Copyright 2021 iLogtail Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Static Check

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "example_config/**"
      - "docker/**"
      - "k8s_template/**"
      - "changes/**"
      - "licenses/**"
      - "CHANGELOG.md"
  push:
    branches:
      - main
      - 1.*
      - 2.*
jobs:
  LicensesCheck:
    env:
      RUNNER_ALLOW_RUNASROOT: 1
    runs-on: ${{ matrix.runner }}-latest
    timeout-minutes: 60
    strategy:
      matrix:
        runner: [ubuntu]
      fail-fast: true
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.10

      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Check License Header
        run: make check-license

      - name: Check Dependencies Licences
        run: make check-dependency-licenses

  StaticCheck:
    env:
      RUNNER_ALLOW_RUNASROOT: 1
    runs-on: ${{ matrix.runner }}-latest
    timeout-minutes: 60
    strategy:
      matrix:
        runner: [ubuntu]
      fail-fast: true
    steps:
      - name: prepare ubuntu environment
        run: |
          sudo apt update
          sudo apt-get clean && sudo apt-get update && sudo apt-get install -y libsystemd-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.10

      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: C++ Core Lint
        uses: jidicula/clang-format-action@v4.14.0
        with:
          clang-format-version: '18'
          check-path: 'core'
          exclude-regex: 'common/xxhash|labels/Relabel\.cpp|ProcessorParseContainerLogNative\.cpp|FlusherSLS\.cpp|_thirdparty|core/common/LRUCache\.h|core/common/queue/.*|core/common/magic_enum\.hpp|core/host_monitor/common/FieldEntry\.h'
          include-regex: '.*\.(cpp|h)$'

      - name: Go Plugin Lint
        run: make lint
  
  UnitTestGo:
    env:
      RUNNER_ALLOW_RUNASROOT: 1
    runs-on: ${{ matrix.runner }}-latest
    timeout-minutes: 60
    strategy:
      matrix:
        runner: [ubuntu]
      fail-fast: true
    steps:
      - name: prepare ubuntu environment
        run: |
          sudo apt update
          sudo apt-get clean && sudo apt-get update && sudo apt-get install -y libsystemd-dev

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.10

      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Copy Lib
        run: sudo cp ./pkg/logtail/libGoPluginAdapter.so /usr/lib/

      - name: UnitTest
        run: sudo make unittest_plugin

      - name: UnitTest PluginManager
        run: sudo make unittest_pluginmanager

  actions-timeline:
    needs: 
      - LicensesCheck
      - StaticCheck
      - UnitTestGo
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - uses: Kesin11/actions-timeline@v2
